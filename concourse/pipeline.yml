resources:
  - name: pivotal-ui-development
    type: git
    source:
      uri: git@github.com:pivotal-cf/pivotal-ui.git
      branch: development
      private_key: ((pui-ci-credentials/Notes/pivotal-ui-git-key))

  - name: pivotal-ui-master
    type: git
    source:
      uri: git@github.com:pivotal-cf/pivotal-ui.git
      branch: master
      private_key: ((pui-ci-credentials/Notes/pivotal-ui-git-key))

  - name: pivotal-ui-semver
    type: semver
    source:
      initial_version: "8.1.0"
      driver: s3
      bucket: pivotal-ui
      key: semver
      access_key_id: ((pui-ci-credentials/Notes/pivotal-ui-semver-access-key-id))
      secret_access_key: ((pui-ci-credentials/Notes/pivotal-ui-semver-secret-access-key))
      region_name: us-west-1

jobs:
  - name: library-unit-test-development
    build_logs_to_retain: 100
    public: true
    plan:
      - get: pivotal-ui-development
        trigger: true
      - task: build
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: pivotalui/concourse
              tag: v3
          inputs:
          - name: pivotal-ui-development
          run:
            path: bash
            args:
            - -exc
            - |
              cd pivotal-ui-development/library
              npm i
              gulp build
              gulp ci

  - name: hologram-styleguide
    build_logs_to_retain: 100
    public: true
    serial_groups: [hologram]
    plan:
      - get: pivotal-ui-development
        trigger: true
        passed: [library-unit-test-development]
      - task: build
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: pivotalui/concourse
              tag: v3
          inputs:
          - name: pivotal-ui-development
          run:
            path: bash
            args:
            - -exc
            - |
              cd pivotal-ui-development/library
              npm i
              gulp build

              cd ../styleguide
              bundle
              npm i
              gulp styleguide-build
              gulp ci

  - name: react-styleguide
    build_logs_to_retain: 100
    public: true
    serial_groups: [react]
    plan:
      - get: pivotal-ui-development
        trigger: true
        passed: [library-unit-test-development]
      - task: build
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: pivotalui/concourse
              tag: v3
          inputs:
          - name: pivotal-ui-development
          run:
            path: bash
            args:
            - -exc
            - |
              pivotal-ui-development/styleguide_new/bin/gemini-in-docker.sh pivotal-ui-development test

  - name: hologram-styleguide-deploy
    build_logs_to_retain: 100
    public: true
    serial_groups: [hologram]
    plan:
      - get: pivotal-ui-development
        trigger: true
        passed: [hologram-styleguide]
      - task: build
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: pivotalui/concourse
              tag: v3
          params:
            CF_PASSWORD: ((pui-ci-credentials/Notes/pivotal-ui-cf-password))
          inputs:
          - name: pivotal-ui-development
          run:
            path: bash
            args:
            - -exc
            - |
              cd pivotal-ui-development/library
              npm i
              gulp build
              cd ../styleguide

              npm i
              bundle
              gulp styleguide-build
              cf api api.run.pivotal.io
              cf auth pivotal-ui@pivotal.io $CF_PASSWORD
              cf target -o pivotal -s pivotal-ui-staging
              cf push

  - name: react-styleguide-deploy
    build_logs_to_retain: 100
    public: true
    serial_groups: [react]
    plan:
      - get: pivotal-ui-development
        trigger: true
        passed: [react-styleguide]
      - task: build
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: pivotalui/concourse
              tag: v3
          params:
            CF_PASSWORD: ((pui-ci-credentials/Notes/pivotal-ui-cf-password))
          inputs:
          - name: pivotal-ui-development
          run:
            path: bash
            args:
            - -exc
            - |
              cd pivotal-ui-development/library
              npm i
              gulp build
              cd ../styleguide_new
              ./bin/deploy.sh $CF_PASSWORD

  - name: merge-to-master
    build_logs_to_retain: 100
    public: true
    plan:
      - get: pivotal-ui-development
        passed: [hologram-styleguide-deploy]
      - put: pivotal-ui-master
        params:
          repository: pivotal-ui-development
          merge: true

  - name: release-and-publish-major
    build_logs_to_retain: 100
    public: true
    plan:
      - get: pivotal-ui-master
        passed: [merge-to-master]
      - put: pivotal-ui-semver
        params:
          bump: major
      - task: update-versions
        file: pivotal-ui-master/concourse/tasks/update-versions/task.yml
        input_mapping:
          semver: pivotal-ui-semver
          pivotal-ui: pivotal-ui-master
      - task: make-and-move-build
        file: pivotal-ui-master/concourse/tasks/make-and-move-build.yml
#      - task: release-and-publish
#        file: pivotal-ui-development/concourse/tasks/release-and-publish/task.yml
#        input_mapping:
#          semver: pivotal-ui-semver
#          pivotal-ui: pivotal-ui-updated-styleguide


#  - name: release-and-publish-minor
#    plan:
#      - get: pivotal-ui-master
#      - get: pivotal-ui-semver
#        params:
#          bump: minor
#      - task: release-and-publish
#        file: pivotal-ui-development/concourse/tasks/release-and-publish/task.yml
#        input_mapping:
#          semver: pivotal-ui-semver
#          pivotal-ui: pivotal-ui-master
#      - put: semver
#
#  - name: release-and-publish-patch
#    plan:
#      - get: pivotal-ui-master
#      - get: pivotal-ui-semver
#        params:
#          bump: patch
#      - task: release-and-publish
#        file: pivotal-ui-development/concourse/tasks/release-and-publish/task.yml
#        input_mapping:
#          semver: pivotal-ui-semver
#          pivotal-ui: pivotal-ui-master
#      - put: semver