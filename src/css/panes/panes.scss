@import "../pui-variables";
@import "../mixins";

.pane {
  > .container {
    padding-top: $pane-offset-xs;
    padding-bottom: $pane-offset-xs;
  }
}

.pane-offset {
  .pane-image {

    text-align: center;
    margin-bottom: -2*$pane-offset-xs;
    > img {
      display: inline-block;
    }
  }
  & + .pane .container {
    padding-top: 2 * $pane-offset-xs;
  }
}

@media (min-width: $screen-sm-min) {
  .pane {
    > .container {
      padding-top: $pane-offset-sm;
      padding-bottom: $pane-offset-sm;
    }
  }
  .pane-offset {
    .pane-image {
      margin-bottom: -2*$pane-offset-sm;
    }
    & + .pane .container {
      padding-top: 2 * $pane-offset-sm;
    }
  }
}

@media (min-width: $screen-md-min) {
  .pane {
    > .container {
      padding-top: $pane-offset-md;
      padding-bottom: $pane-offset-md;
    }
  }
  .pane-offset {
    .pane-image {
      margin-bottom: -2*$pane-offset-md;
    }
    & + .pane .container {
      padding-top: 2 * $pane-offset-md;
    }
  }
}

// Container widths
//
// Set the container width, and override it for fixed navbars in media queries.

.container {
  @include container-fixed;

  @media (min-width: $screen-sm-min) {
    width: $container-sm;
  }

  @media (min-width: $screen-md-min) {
    width: $container-md;
  }

  @media (min-width: $screen-lg-min) {
    width: $container-lg;
  }
}

// Fluid container
//
// Utilizes the mixin meant for fixed width containers, but without any defined
// width for fluid, full width layouts.

.container-fluid {
  @include container-fixed;
}
