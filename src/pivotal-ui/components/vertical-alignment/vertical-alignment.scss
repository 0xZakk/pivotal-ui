/*doc
---
title: Vertical Alignment
name: vertical_align
categories:
 - css_utilities_vertical-align
 - css_all
---

<code class="pam">
<i class="fa fa-download" alt="Install the Component">
npm install pui-css-vertical-alignment --save
</i>
</code>



The Aligner allows you to vertically align children to the top, center, or bottom.
Its height is set by default to 230px.

<div class="alert alert-warning">
  <p class="em-high">
    This component is not supported in IE10 and below.
    While the content will appear, it will not be vertically aligned.
  </p>
</div>

```html_example
<div class="aligner">
  <a class="aligner-item aligner-item-top" href="http://bit.ly/1wCDWdC">On Top</a>
  <a class="aligner-item" href="http://bitly.com/ZTHUDU">Center</a>
  <a class="aligner-item aligner-item-bottom" href="http://bit.ly/12TqYiL">Bottom</a>
</div>
```

Override the default height by setting an inline style like so:

```html_example
<div class="aligner" style="height: 100px;">
  <a class="aligner-item" href="http://bitly.com/ZTHUDU">Center</a>
</div>
```

You can position both vertically and horizontally by combining the aligner with grids, or the [text-alignment][alignment] classes
(`.txt-l`, `.txt-r`, and `.txt-c`)


```html_example
<div class="aligner txt-c">
  <a class="aligner-item" href="http://bitly.com/ZTHUDU">Centered content</a>
</div>
```

*/

.aligner {
  height: 230px;
  display: flex;
  display: -webkit-box;
  display: -webkit-flex;
  flex-flow: row wrap;
  -webkit-flex-flow: row wrap;
  align-items: center;
  -webkit-align-items: center;

  .aligner-item {
    flex: 0 100%;
    -webkit-flex: 0 100%;

    &.aligner-item-top {
      align-self: flex-start;
      -webkit-align-self: flex-start;
    }

    &.aligner-item-bottom {
      align-self: flex-end;
      -webkit-align-self: flex-end;
    }
  }
}
