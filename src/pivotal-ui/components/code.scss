/*doc
---
title: Code
name: code
categories:
  - Objects
  - All
---

In order to show highlighted code, you will need to apply a language specific class to the code tag. For example, `.language-ruby`.

There are several languages already available (and others available from the [Prismjs.com](http://prismjs.com
) website), including:

* Markup
* CSS
* C-like
* JavaScript
* Java
* PHP
* PHP
* CoffeeScript
* Sass
* Bash
* Python
* HTTP
* Ruby
* Go

```haml_example
%pre
  %code.language-ruby
    :preserve
      class Foo
        def bar
          puts 'hi'
        end
      end
```

Make it scrollable

```haml_example

%pre.pre-scrollable
  %code.language-ruby
    :preserve
      class Foo
        def bar
          puts 'hi'
        end

        def bar
          puts 'hi'
        end

        def bar
          puts 'hi'
        end

        def bar
          puts 'hi'
        end

        def bar
          puts 'hi'
        end

        def bar
          puts 'hi'
        end

        def bar
          puts 'hi'
        end
      end
```

Scrollable with too little content:

```haml_example

%pre.pre-scrollable
  %code.language-ruby
    :preserve
      class Foo
        def bar
          puts 'hi'
        end
      end
```
*/

.pre-scrollable {
  overflow-y: auto; //bootstrap override
  height: 295px; //bootstrap override
}

/*doc
---
title: Inline
name: code_inline
parent: code
---

```html_example
<p>This is an example of a paragraph with <code>an inline code snippet</code> within it.</p>
```

*/

/*doc
---
title: Inline Dark
name: code_inline_dark
parent: code
---

```html_example
<p>This is an example of a paragraph with <code class="inline-dark">a dark inline code snippet</code> within it.</p>
```

*/

.inline-dark {
  background-color: $code-background-dark;
  border-radius: $code-border-radius;
  color: $code-color-dark;
}

/*doc
---
title: Terminal Window
name: code_terminal_window
parent: code
---

<label>Alternate CSS <input type='checkbox' name='stylesheet' class='alternate-css'/></label>

```haml_example
.terminal
  %pre
    %code.language-ruby
      :preserve
        class Foo
          def bar
            puts 'hi'
          end
        end

        class Bar
          def bar
            puts 'hi'
          end
        end

        class Baz
          def bar
            puts 'hi'
          end
        end

        class Bop
          def bar
            puts 'hi'
          end
        end
```

*/

.terminal {
  background-color: $gray-7;
  padding: 6px 10px 12px 10px;
  border-radius: $code-chrome-border-radius;
  box-shadow: 0 2px 0 $shadow-1;

  &::before {
    content: '\F111 \0000a0 \0000a0 \0000a0 \0000a0 \F111 \0000a0 \0000a0 \0000a0 \0000a0 \F111';
    color: $gray-4;
    font-size: 13px;
    font-family: FontAwesome;
  }

  pre[class*="language-"] {
    margin: 2px 0 0 0;
    border-radius: $code-border-radius;
    height: 320px;
    overflow-y: auto;
  }
}
