@import "../pui-variables";

/*doc
---
title: Code
name: code
categories:
  - Objects
  - All
---

<code class="pam">
<i class="fa fa-download" alt="Install the Component">
npm install pui-css-code --save
</i>
</code>


This is your basic unstyled code sample:

```html_example
<pre class="pre-unstyled"><code>class Foo
  def bar
    puts 'hi'
  end
end</code></pre>
```
*/

.pre-unstyled {
  background-color: transparent;
  border: none;
  border-radius: 0;
  margin: 0;
  padding: 0;
  color: inherit;
}

/*doc
---
title: Styled Code
name: code_styled
parent: code
---

In order to show syntax-highlighted code, you will need to apply a language specific class to the code tag. For example, `.language-ruby`.

There are several languages already available (and others available from the [Prismjs.com](http://prismjs.com
) website), including:

* Markup
* CSS
* C-like
* JavaScript
* Java
* PHP
* PHP
* CoffeeScript
* Sass
* Bash
* Python
* HTTP
* Ruby
* Go

For Pivotal UI style code highlighting:
<code class="pam">
<i class="fa fa-download" alt="Install Prismjs">
npm install pui-prism --save
</i>
</code>

For a theme of your choice:
<code class="pam">
<i class="fa fa-download" alt="Install Prismjs">
npm install prismjs-\<theme\>-theme --save
</i>
</code>

```html_example
<pre><code class="language-ruby">class Foo
  def bar
    puts 'hi'
  end
end</code></pre>
```

Make it scrollable

```html_example
<pre class="pre-scrollable"><code class="language-ruby">class Foo
  def bar
    puts 'hi'
  end

  def bar
    puts 'hi'
  end

  def bar
    puts 'hi'
  end

  def bar
    puts 'hi'
  end

  def bar
    puts 'hi'
  end

  def bar
    puts 'hi'
  end

  def bar
    puts 'hi'
  end
end</code></pre>
```

Scrollable with too little content:

```html_example
<pre class="pre-scrollable"><code class="language-ruby">class Foo
  def bar
    puts 'hi'
  end
end</code></pre>
```

If you would like a set a default height, please add it manually.

*/

.pre-scrollable {
  overflow-y: auto; //bootstrap override
}

/*doc
---
title: Inline
name: code_inline
parent: code
---

```html_example
<p>This is an example of a paragraph with <code>an inline code snippet</code> within it.</p>
```

*/

/*doc
---
title: Inline Dark
name: code_inline_dark
parent: code
---

```html_example
<p>This is an example of a paragraph with <code class="inline-dark">a dark inline code snippet</code> within it.</p>
```

*/

.inline-dark {
  background-color: $code-background-dark;
  border-radius: $code-border-radius;
  color: $code-color-dark;
}

/*doc
---
title: Terminal Window
name: code_terminal_window
parent: code
---

<label>Alternate CSS <input type='checkbox' name='stylesheet' class='alternate-css'/></label>

```html_example
<div class="terminal">
  <pre><code class="language-ruby">class Foo
  def bar
    puts 'hi'
  end
end

class Bar
  def bar
    puts 'hi'
  end
end

class Baz
  def bar
    puts 'hi'
  end
end

class Bop
  def bar
    puts 'hi'
  end
end</code></pre>
</div>

```

*/

.terminal {
  background-color: $gray-7;
  padding: 6px 10px 12px 10px;
  border-radius: $code-chrome-border-radius;
  box-shadow: 0 2px 0 $shadow-1;

  &::before {
    content: '\F111 \0000a0 \0000a0 \0000a0 \0000a0 \F111 \0000a0 \0000a0 \0000a0 \0000a0 \F111';
    color: $gray-4;
    font-size: 13px;
    font-family: FontAwesome;
  }

  pre[class*="language-"] {
    margin: 2px 0 0 0;
    border-radius: $code-border-radius;
    height: 320px;
    overflow-y: auto;
  }
}
