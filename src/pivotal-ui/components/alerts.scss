/*doc
---
title: Alerts
name: alert
categories:
  - Objects
  - All
---

Alerts are used to display flash messages to the user. When using alerts with simple one-line text,
wrap the text in a `<p>` with `.em-high`.

```html_example
<div class="alert alert-success">
  <p class="em-high">Success</p>
</div>
```

Alerts are also used to bring important notes to a user's attention. If the content of your alert
is a little more complicated, we would recommend using headings coupled with the content.

```html_example
<div class="alert alert-info">
  <h5 class="em-high mtn">You should know...</h5>
  <p>There are some things you should note. Just in case you didn't figure it out already.</p>
  <ul>
    <li>thing 1</li>
    <li>thing 2</li>
  </ul>
</div>
```

If you want to include a link in your alert, use the class `alert-link`.

```html_example
<div class="alert alert-warning">
  <h5 class="em-high mtn">Important Link</h5>
  <p>
    It is very important that you
    <a class="alert-link" href="http://bit.ly/1vkXaYb">click here</a>
  </p>
</div>
```
*/

/*doc
---
title: Alert Types
name: 01_alert_types
parent: alert
---

Our 4 alert types are:

```html_example_table
<div class="alert alert-success">
  <div class="media">
    <div class="media-left">
      <i class="fa fa-check-circle"></i>
    </div>
    <div class="media-body em-high">
      Everything is wonderful.
      <a class="alert-link" href="http://bit.ly/QCMZM5">Be happy.</a>
    </div>
  </div>
</div>

<div class="alert alert-info">
  <div class="media">
    <div class="media-left">
      <i class="fa fa-info-circle"></i>
    </div>
    <div class="media-body em-high">
      Info for you.
      <a class="alert-link" href="http://bit.ly/1DFns8H">Tell me more.</a>
    </div>
  </div>
</div>

<div class="alert alert-warning">
  <div class="media">
    <div class="media-left">
      <i class="fa fa-exclamation-triangle"></i>
    </div>
    <div class="media-body em-high">
      Warning: There is no parking on the dancefloor.
      <a class="alert-link" href="http://bit.ly/1uM05DJ">Be alert.</a>
    </div>
  </div>
</div>

<div class="alert alert-error">
  <div class="media">
    <div class="media-left">
      <i class="fa fa-exclamation-triangle"></i>
    </div>
    <div class="media-body em-high">
      Something has gone horribly awry.
      <a class="alert-link" href="http://bit.ly/1rooFJV">You've made a huge mistake.</a>
    </div>
  </div>
</div>
```

*/

/*doc
---
title: Dismissable Alerts
name: 02_alert_dismissable
parent: alert
---

By adding `.alert-dismissable` and a button, you can also make alerts dismissable.

```html_example
<div class="alert alert-success alert-dismissable">
  <button class="close" data-dismiss="alert">
    <i class="fa fa-times"></i>
  </button>
  <p class="em-high">Click the 'X' over there------> </p>
</div>

```

If a full-width dissmissable alert is desired, but the content needs to be aligned with
other content inside a container on the page (of a width 500px for this example), you might consider doing the following:

```html_example

<div class="pane bg-accent-5">
  <div class="container pan" style="width:500px">
    <div class="alert alert-info mtn">
      <button class="close" data-dismiss="alert">
        <i class="fa fa-times"></i>
      </button>
      <div class="media mtn">
        <div class="media-left">
          <i class="fa fa-info-circle"></i>
        </div>
        <div class="media-body em-high">
          3 new files available for Pivotal CF.
          <a class="type-sm alert-link" href="http://bit.ly/1DFns8H">Mark all as viewed.</a>
        </div>
      </div>
    </div>
  </div>
</div>

```

*/

.alert {
  border: none;
  margin: $baseSpacing 0 0;

  a.alert-link {
    color: inherit;
    text-decoration: underline;
  }

  .close {
    text-decoration: none;
    line-height: .7;
    text-shadow: none;
  }
}

.alert-success .alert-link:hover {
  color: darken($alert-success-text, 10%);
}

.alert-info .alert-link:hover {
  color: darken($alert-info-text, 10%);
}

.alert-warning .alert-link:hover {
  color: darken($alert-warning-text, 10%);
}

// bootstrap includes alert-danger, but our html expects "alert-error" class
.alert-error {
  @extend .alert-danger;

  .alert-link:hover {
    color: darken($alert-danger-text, 10%);
  }
}

/*doc
---
title: React Alerts
name: react_alerts
categories:
  - Beta
---

React alerts

```html_example_table
<div id="react-alert-example"></div>
```

```jsx_example
React.render(
  <div>
    <UI.SuccessAlert>success</UI.SuccessAlert>
    <UI.InfoAlert>info</UI.InfoAlert>
    <UI.WarningAlert>warning</UI.WarningAlert>
    <UI.ErrorAlert>error</UI.ErrorAlert>
  </div>,
  document.getElementById('react-alert-example')
);
```

*/

/*doc
---
title: Dismissable React Alerts
name: react_alerts_dismissable
parent: react_alerts
---

Add the `dismissable` property to add a close button to the alert.

```html_example_table
<div id="react-alert-dismissable-example"></div>
```

```jsx_example
React.render(
  <UI.SuccessAlert dismissable>success</UI.SuccessAlert>,
  document.getElementById('react-alert-dismissable-example')
);
```

If you want a callback to be called when the close button is
clicked, set the `dismissable` property to that callback.

```html_example_table
<div id="react-alert-dismissable-callback-example"></div>
```

```jsx_example
var callback = function() {
  alert('Dismissed!');
};

React.render(
  <UI.InfoAlert dismissable={callback}>with callback</UI.InfoAlert>,
  document.getElementById('react-alert-dismissable-callback-example')
);
```

*/

/*doc
---
title: React Alerts with Icons
name: react_alerts_icon
parent: react_alerts
---

If you want an icon to be displayed, set the `withIcon` property.

```html_example_table
<div id="react-alert-icon-example"></div>
```

```jsx_example
React.render(
  <div>
    <UI.SuccessAlert withIcon>success</UI.SuccessAlert>
    <UI.InfoAlert withIcon>info</UI.InfoAlert>
    <UI.WarningAlert withIcon>warning</UI.WarningAlert>
    <UI.ErrorAlert withIcon>error</UI.ErrorAlert>
  </div>,
  document.getElementById('react-alert-icon-example')
);
```

Here's a dismissable alert with an icon

```html_example_table
<div id="react-alert-icon-dismissable-example"></div>
```

```jsx_example
React.render(
  <UI.WarningAlert dismissable withIcon>warning</UI.WarningAlert>,
  document.getElementById('react-alert-icon-dismissable-example')
);
```

*/
