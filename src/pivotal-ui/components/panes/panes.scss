@import "../pui-variables";

/*doc
---
title: Panes
name: pane
categories:
  - Layout
  - All
---

Panes are horizontal groupings of content that are usually used to
span the full browser window width. It's going to look funny here,
a better way to view it is on the [panes page](/pane.html).

You can combine up to two background classes on the pane component.
The one on the `.pane` element will span the full browser width. The
one on the `.container` element will be constrained to the content width.

```html_example
<div class="pane bg-dark-1">
  <div class="container bg-glow">
    <h1 class="type-neutral-11">This is a pane</h1>
  </div>
</div>

```

```html_example
<div class="pane pane-offset bg-dark-1">
  <div class="container bg-glow">
    <h1 class="type-neutral-11">This is a pane</h1>
    <div class="pane-image">
      <img class="img-responsive" src="../images/console-laptop.png" alt="A laptop showing Pivotal Web Services dashboard." />
    </div>
  </div>
</div>
<div class="pane bg-cloud">
  <div class="container">
    <h1>This is another pane</h1>
  </div>
</div>

```

*/

.pane {
  > .container {
    padding-top: $pane-offset-xs;
    padding-bottom: $pane-offset-xs;
  }
}

.pane-offset{
  .pane-image {

    text-align: center;
    margin-bottom: -2*$pane-offset-xs;
    > img {
      display: inline-block;
    }
  }
  &+ .pane .container {
    padding-top: 2 * $pane-offset-xs;
  }
}

@media (min-width: $screen-sm-min) {
  .pane {
    > .container {
      padding-top: $pane-offset-sm;
      padding-bottom: $pane-offset-sm;
    }
  }
  .pane-offset{
    .pane-image {
      margin-bottom: -2*$pane-offset-sm;
    }
    &+ .pane .container {
      padding-top: 2 * $pane-offset-sm;
    }
  }
}

@media (min-width: $screen-md-min) {
  .pane {
    > .container {
      padding-top: $pane-offset-md;
      padding-bottom: $pane-offset-md;
    }
  }
  .pane-offset{
    .pane-image {
      margin-bottom: -2*$pane-offset-md;
    }
    &+ .pane .container {
      padding-top: 2 * $pane-offset-md;
    }
  }
}

/*doc
---
title: Panes
name: pane_react
category:
  - React Beta
---

The `Pane` component is a straightforward implementation of the [Pane][pane] styling.
Any className values passed through are passed to the underlying `.pane`.

```react_example
<UI.Pane className="bg-neutral-10">
  <UI.DefaultH1>This is a pane</UI.DefaultH1>
</UI.Pane>
```

In the event that you need additional configuration applied to a Pane, you can use the
`BasePane` component which accepts properties for `outerClass` and `innerClass`.

These values are added to the class name of the `.pane` and the `.container` respectively.

```react_example
<UI.BasePane outerClass="bg-dark-1" innerClass="bg-glow">
  <UI.DefaultH1 color="type-neutral-9">This is a pane (configurable)</UI.DefaultH1>
</UI.BasePane>
```
*/
