/* Transition mixins */

@mixin transition-pui($type:all, $speed:300ms, $ease: ease-out){
  -webkit-transition: $type $speed $ease;
  -moz-transition: $type $speed $ease;
  transition: $type $speed $ease;
  @if($type == all) {
    -webkit-transition-property: background-color, color, opacity;
    -moz-transition-property: background-color, color, opacity;
    transition-property: background-color, color, opacity;
  }
}

@mixin no-transition(){
  -webkit-transition-property: none;
  -moz-transition-property: none;
  transition-property: none;
}

/* Button Mixins */

@mixin button-skin($color, $background, $border: null, $color-disabled: null) {
  color: $color;
  background-color: $background;
  @if ($border) {
    border: 1px solid $border;
  }
  outline: none;

  @include transition-pui();

  &:hover,
  &:focus {
    color: lighten($color, 5%);
    background-color: lighten($background, 6%);
  }
  .btn-group & {
    &:active,
    &.active {
      color: darken($color, 5%);
      background-color: darken($background, 6%);
      box-shadow: none;
      outline: none;
    }
  }
  .open & {
    &.dropdown-toggle {
      color: darken($color, 5%);
      background-color: darken($background, 6%);
      box-shadow: none;
      &:hover, &:focus {
        color: darken($color, 5%);
        background-color: darken($background, 6%);
      }
    }
  }
  &:active,
  &.active {
    color: darken($color, 5%);
    background-color: darken($background, 6%);
    box-shadow: none;
    outline: none;
  }
  &.disabled,
  &[disabled],
  fieldset[disabled] & {
    &,
    &:hover,
    &:focus,
    &:active,
    &.active {
      color: $color-disabled;
      opacity: 0.5;
    }
  }
}

@mixin button-shadow() {
  box-shadow: 0 2px 0 $btn-shadow;
  &:hover,
  &:focus,
  &.disabled,
  &[disabled],
  fieldset[disabled] & {
    box-shadow: 0 2px 0 $btn-shadow;
  }
  &:focus {
    box-shadow: 0 2px 0 $btn-shadow;
  }
  &:active,
  &.active{
   box-shadow: none;
  }
}

//Used for translucent borders
@mixin background-clip-fix() {
  -moz-background-clip: padding;     /* Firefox 3.6 */
  -webkit-background-clip: padding;  /* Safari 4? Chrome 6? */
  background-clip: padding-box;      /* Firefox 4, Safari 5, Opera 10, IE 9 */
}

@mixin h1() {
  //bootstrap
  font-family: $headings-font-family;
  line-height: $headings-line-height;
  color: $headings-color;
  font-size: $font-size-h1;

  //pui
  margin-top: $whitespace-xl;
  margin-bottom: $whitespace-l;

  @media all and (max-width: $screen-sm) {
    & {
      margin-top: $whitespace-screen-sm-xl;
      margin-bottom: $whitespace-screen-sm-l;
    }
  }
}

@mixin no-select {
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

$whitespace-keys: (p padding, m margin, a '', v -top -bottom, h -left -right, t -top, r -right, b -bottom, l -left);
@function expand-whitespace-key($k) {
  @each $pair in $whitespace-keys {
    $short: nth($pair, 1);
    $long: nth($pair, 2);
    // v and h need to pass in 2 parameters
    @if (length($pair) == 3) {
      $long: (nth($pair, 2) nth($pair, 3))
    }
    @if $short == $k {
      @return $long;
    }
  }
  @warn "Couldn't expand #{$k}";
  @return $k;
}

$types: (p, m); // padding,margin
$locations: (a, v, h, t, r, b, l); // all,top,right,bottom,left,horizontal,vertical
$tShirtSizes: (n, s, m, l, xl, xxl, xxxl, xxxxl);

@mixin whitespace($units: ()) {
  $units: join(0, $units);

  @for $i from 1 through length($units) {
    $tShirtSize: nth($tShirtSizes, $i);
    $size: nth($units, $i);

    @each $location in $locations {
      @each $type in $types {
        .#{$type}#{$location}#{$tShirtSize} {
          @each $whitespace-location in expand-whitespace-key($location) {
            #{expand-whitespace-key($type)}#{$whitespace-location}: $size;
          }
        }
      }
    }
  }
}